{namespace cobalt.molecules}

/**
 * @param baseClass
 * @param baseUrl
 * @param? modifiers
 * @param? facebookUrl
 * @param? facebookIcon
 * @param? twitterUrl
 * @param? twitterIcon
 * @param? instagramUrl
 * @param? instagramIcon
 * @param? youtubeUrl
 * @param? youtubeIcon
 * @param? linkedinUrl
 * @param? linkedinIcon
 * @param? yelpUrl
 * @param? yelpIcon
 * @param? pinterestUrl
 * @param? pinterestIcon
 * @param? additionalSocials
 * @param? linkNewTab
 * @param? customOrder
 * @param? yaScopeName
 */
{template .SocialLinks}
  {let $class}
    {call cobalt.helpers.class_builder data="all"}
      {param name: 'SocialLinks' /}
    {/call}
  {/let}

  {let $defaultLinks: [
      'Facebook': $facebookUrl ? [
        'url': $facebookUrl,
        'yaTrack': 'facebook',
        'prettyName': 'Facebook',
        'icon': $facebookIcon ? $facebookIcon : null
      ] : null,
      'Twitter': $twitterUrl ? [
        'url': $twitterUrl,
        'yaTrack': 'twitter',
        'prettyName': 'Twitter',
        'icon': $twitterIcon ? $twitterIcon : null
      ] : null,
      'Instagram': $instagramUrl ? [
        'url': $instagramUrl,
        'yaTrack': 'instagram',
        'prettyName': 'Instagram',
        'icon': $instagramIcon ? $instagramIcon : null
      ] : null,
      'YouTube': $youtubeUrl ? [
        'url': $youtubeUrl,
        'yaTrack': 'youtube',
        'prettyName': 'YouTube',
        'icon': $youtubeIcon ? $youtubeIcon : null
      ] : null,
      'LinkedIn': $linkedinUrl ? [
        'url': $linkedinUrl,
        'yaTrack': 'linkedin',
        'prettyName': 'LinkedIn',
        'icon': $linkedinIcon ? $linkedinIcon : null
      ] : null,
      'Yelp': $yelpUrl ? [
        'url': $yelpUrl,
        'yaTrack': 'yelp',
        'prettyName': 'Yelp',
        'icon': $yelpIcon ? $yelpIcon : null
      ] : null,
      'Pinterest': $pinterestUrl ? [
        'url': $pinterestUrl,
        'yaTrack': 'pinterest',
        'prettyName': 'Pinterest',
        'icon': $pinterestIcon ? $pinterestIcon : null
      ] : null
    ]
  /}

  {let $socialLinks: augmentMap($defaultLinks, $additionalSocials ? $additionalSocials : [:]) /}

  {let $defaultOrder: augmentList(['Facebook', 'Twitter', 'Instagram', 'YouTube', 'LinkedIn', 'Yelp', 'Pinterest'], keys($additionalSocials ?: [:])) /}
  {let $order: $customOrder ? $customOrder : $defaultOrder /}

  <div class="{$class}" data-ya-scope="{$yaScopeName ? $yaScopeName : 'social'}">
    {foreach $social in $order}
      {if $socialLinks[$social]?.url}
        {let $modifier}
          {if $socialLinks[$social].prettyName}
            {$socialLinks[$social].prettyName |casing:'lower' |spaces:'-'}
          {/if}
        {/let}
        <div class="SocialLinks-linkWrapper">
          {call cobalt.atoms.Link data="all"}
            {param baseClass: 'SocialLinks' /}
            {param subClass}
              {if $modifier}
                {$modifier}
              {/if}
            {/param}
            {param href: $socialLinks[$social].url /}
            {param newTab: $linkNewTab /}
            {param yaTrack: $socialLinks[$social]?.yaTrack /}
            {param content}
              {if $socialLinks[$social].icon}
                {call cobalt.atoms.Image}
                  {param baseClass: 'SocialLinks' /}
                  {param image: [
                    'src': $socialLinks[$social].icon,
                    'alt': $socialLinks[$social].prettyName ?: ''
                  ] /}
                {/call}
              {else}
                {call cobalt.atoms.Icon data="all"}
                  {param baseClass: 'Social' /}
                  {param modifiers: [$modifier ?: ''] /}
                  {param id: $modifier /}
                {/call}
              {/if}
            {/param}
          {/call}
        </div>
      {/if}
    {/foreach}
  </div>

{/template}
