{namespace cobalt.molecules}

/**
 * @param baseUrl
 * @param crumbNames
 * @param crumbUrls
 * @param? crumbBaseName
 *
 * Class passthroughs
 * @param baseClass
 * @param? subClass
 * @param? modifiers
 * @param? attributes
 *
 * Config params
 * @param? suppressIndexHtml
 * @param? abbrState
 * @param? separatorText
 * @param? customSeparator
 * @param? hideSeparator
 * @param? yaTrack
 * @param? yaScope
 * @param? hideSchema
 */
{template .Breadcrumbs}
  {let $class}
    {call cobalt.helpers.class_builder data="all"}
      {param name: 'Breadcrumbs' /}
    {/call}
  {/let}
  {let $attribute}
    {call cobalt.helpers.attribute_builder data="all" /}
  {/let}

  {let $abbr: $abbrState ? true : false /}

  <nav
    class="{$class}"
    data-ya-scope="{$yaScope ? $yaScope : 'breadcrumbs'}"
    aria-label="Breadcrumb"
    {if $attribute} {$attribute |noAutoescape}{/if}
  >
    <ol class="Breadcrumbs-list"{if not $hideSchema and length($crumbNames) > 1} itemscope itemtype="http://schema.org/BreadcrumbList"{/if}>

      {foreach $name in $crumbNames}

        {let $content}
          {call cobalt.atoms.Text}
            {param baseClass: 'Breadcrumbs' /}
            {param tag: 'span' /}
            {param itemprop}
              {if not $hideSchema and not isLast($name)}
                name
              {/if}
            {/param}
            {param content}
              {if isFirst($name)}
                {if $crumbBaseName}
                  {$crumbBaseName |noAutoescape}
                {else}
                  {msg desc="Label of the link to the top directory level"}
                    All locations
                  {/msg}
                {/if}
              {else}
                {$name |abbr:$abbr |noAutoescape}
              {/if}
            {/param}
          {/call}
        {/let}

        <li class="Breadcrumbs-item"
            {if not $hideSchema and not isLast($name)}
              {sp}itemscope
              {sp}itemprop="itemListElement"
              {sp}itemtype="http://schema.org/ListItem"
            {/if}
        >
          {if not isLast($name)}
            // We use the link tag for schema because href="." breaks schema,
            // but many clients don't want to append the 'index.html' to the base crumb URL.
            {if not $hideSchema}
              <link itemprop="item" href="{$baseUrl}{$crumbUrls[index($name)] |noAutoescape}">
            {/if}

            {let $href}
              {if $suppressIndexHtml and $crumbUrls[index($name)] == 'index.html'}
                {$baseUrl ? $baseUrl : '.'}
              {else}
                {$baseUrl}{$crumbUrls[index($name)] |noAutoescape}
              {/if}
            {/let}

            {call cobalt.atoms.Link}
              {param baseClass: 'Breadcrumbs' /}
              {param content: $content /}
              {param href: $href /}
              {param yaTrack: $yaTrack ? $yaTrack : '#' /}
            {/call}
          {else}
            {$content |noAutoescape}
          {/if}
          {if not $hideSeparator and not isLast($name)}
            {if $customSeparator}
              {$customSeparator |noAutoescape}
            {else}
              {call cobalt.atoms.Text}
                {param baseClass: 'Breadcrumbs' /}
                {param subClass: 'separator' /}
                {param content: $separatorText ? $separatorText : '/' /}
                {param tag: 'span' /}
              {/call}
            {/if}
          {/if}
          {if not $hideSchema and not isLast($name)}
            //Google Example found at https://developers.google.com/structured-data/breadcrumbs is 1 based
            <meta itemprop="position" content="{index($name) + 1}" />
          {/if}
        </li>
      {/foreach}
    </ol>
  </nav>
{/template}