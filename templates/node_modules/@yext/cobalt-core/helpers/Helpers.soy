{namespace cobalt.helpers}

/**
 * @param name
 */
{template .name_to_subclass}
  {let $firstLetter}
    {substring($name, 0 ,1) |casing:'lower'}
  {/let}
  {let $otherLetters}
    {substring($name, 1)}
  {/let}
  {$firstLetter}{$otherLetters}
{/template}

/**
 * @param name
 * @param baseClass
 * @param? jsClass
 * @param? subClass
 * @param? modifiers
 */
{template .class_builder}
  // Button Core-button
  {$name} {$baseClass}-{call .name_to_subclass data="all" /}

  // js-toggle-button
  {if $jsClass}
    {sp}{$jsClass}
  {/if}

  // Core-specialButton
  {if $subClass}
    {sp}{$baseClass}-{$subClass}
  {/if}

  // Text--large, Text--small
  {if length($modifiers ?: [])}
    {foreach $modifier in $modifiers}
      {sp}{$name}--{$modifier}
    {/foreach}
  {/if}
{/template}

/**
 * @param attributes
 * [
 *   'aria-described-by': 'sample',
 *   'required': '',
 *   'literal': 'data-test="true"'
 * ]
 */
{template .attribute_builder}
  {if length(keys($attributes ?: [:])) > 0}
    {foreach $key in keys($attributes)}
      {let $value: $attributes[$key] /}
      {if $value}
        {if $key == 'literal'}
          {$value |noAutoescape}
        {else}
          {$key |noAutoescape}="{$value |noAutoescape}"
        {/if}
      {else}
        {$key |noAutoescape}
      {/if}
      {if not isLast($key)}{sp}{/if}
    {/foreach}
  {/if}
{/template}
