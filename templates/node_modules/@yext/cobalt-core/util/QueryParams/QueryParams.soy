{namespace cobalt.util}

/**
 * @param params
 * @param? allowEmpty
 */
{template .QueryParams}
  {if length(keys($params ?: [:]))}
    {foreach $key in keys($params)}
      // Get all params with a key
      {let $filtered: augmentList($filtered ?: [], $params[$key] ? [['key': $key, 'value': $params[$key]]] : []) /}
      {if isLast($key)}
        {let $builtQuery}
          {foreach $item in $filtered}
            // Allow array type values to be transformed into csv
            {let $value}{$item.value|noAutoescape|rreplace:', ',','|rreplace:' ','%20'|rreplace:'\\[|\\]',''}{/let}
            // Check if param has a value, or if it's ok to print without
            {if $allowEmpty or $value}
              {if isFirst($item)}?{else}&{/if}
              {$item.key}
              {if $item.value}
                ={$value}
              {/if}
            {/if}
          {/foreach}
        {/let}
        // Return the final query params
        {$builtQuery |noAutoescape}
      {/if}
    {/foreach}
  {/if}
{/template}

