{namespace cobalt.locator}

/**
 * @param baseUrl
 * @param locale
 * @param siteInternalHostName
 * @param? siteAttributes
 *
 * Content params
 * @param? ctaText
 * @param? ctaTextField
 * @param? ctaURLField
 * @param? geolocateSVG
 * @param? searchButtonContent
 * @param? searchPlaceholderText
 * @param? servicesCustomField
 * @param? servicesLabel
 *
 * Configuration params
 * @param? resultType
 * @param? resultTypePlural
 * @param? teaserModifier
 * @param? useKilometers
 *
 * Filters params
 * @param customParams
 * @param schema
 * @param? filtersTitle
 * @param? filtersApplyText
 * @param? filtersClearText
 * @param? customFilters
 * @param? filtersSVG
 * @param? filtersCloseSVG
 * @param? useDefaultFilters
 */
{template .dill}
  <div id="js-locator" class="Locator Locator--dill">
    {call components.SpinnerModal.SpinnerModal data="all" /}

    {if $useDefaultFilters or $customFilters}
      <div id="filters" class="Locator-filters">
        <div class="Locator-overlay js-filters-overlay"></div>
        <div id="filters-modal" class="Locator-filterFieldsWrapper">
          {call .cobalt_filters data="all"}
            {param class: 'Locator-filterFields' /}
            {param content}
              {if $useDefaultFilters}
                {call search.Filters data="all"}
                  {param queryParams: [:] /}
                {/call}
              {elseif $customFilters}
                {$customFilters |noAutoescape}
              {/if}
            {/param}
          {/call}
        </div>
      </div>
    {/if}

    {call .cobalt_params data="all" /}
    <div class="Locator-content">
      <div class="Locator-contentWrap js-locator-contentWrap">
        <div class="Locator-searchWrapper">
          {call .cobalt_search_form data="all"}
            {param showFiltersButton: ($useDefaultFilters and length($customParams ?: []) > 0) or $customFilters /}
            {param searchButtonContent}
              {if $searchButtonContent}
                {$searchButtonContent |noAutoescape}
              {else}
                {call components.Svg.Icon data="all"}
                  {param iconName: 'arrow' /}
                {/call}
              {/if}
            {/param}
            {param filtersSVG}
              {if $filtersSVG}
                {$filtersSVG |noAutoescape}
              {else}
                {call components.Svg.Icon data="all"}
                  {param iconName: 'altfilters' /}
                {/call}
                <span class="Locator-filtersButtonText">
                  {call strings.filters_buttonText /}
                </span>
              {/if}
            {/param}
          {/call}
        </div>
        <div class="Locator-resultsWrapper js-locator-resultsWrapper">
          <div class="Locator-resultsContainer js-locator-resultsContainer">
          </div>
        </div>
      </div>

      <div id="js-map-wrapper" class="Locator-map">
        {call components.Maps.Map data="all" /}
      </div>

      <div class="Locator-mobileToggles js-locator-mobiletoggles">
        <button class="Locator-mobileToggle Locator-mobileToggle--results js-locator-listToggle">
          <span class="Locator-viewListText">
            {call strings.locator_viewList /}
          </span>
          <span class="Locator-viewMapText">
            {call strings.locator_viewMap /}
          </span>
        </button>
        {if $useDefaultFilters or $customFilters}
          <button class="Locator-mobileToggle Locator-mobileToggle--filters js-filters-open">
            {call strings.filters_buttonText /}
          </button>
        {/if}
      </div>
    </div>
  </div>
{/template}


/**
 * @param baseUrl
 * @param locale
 *
 * Locator params
 * @param queryParams
 * @param response
 * @param? detailEntity
 *
 * Configuration params
 * @param? noResultsContent
 * @param? resultType
 * @param? resultTypePlural
 * @param? teaserModifier
 */
{template .dill_results}
  {if $detailEntity}
    <div class="Locator-detail js-locator-detail" id="js-detail-{$detailEntity.profile.meta.id}">
      {call common.modules.Teaser data="$detailEntity"}
        {param baseUrl: $baseUrl /}
        {param locale: $locale /}
        {param modifier: $teaserModifier /}
        {param callerTemplateName: 'cobalt.locator.detail' /}
      {/call}

      <button class="Locator-detailClose js-locator-detailClose">
        {call components.Svg.Icon data="all"}
          {param iconName: 'close' /}
        {/call}
        <span class="sr-only">
          {call strings.locator_closeLocationDetail /}
        </span>
      </button>
    </div>
  {else}
    {call .cobalt_results data="all"}
      {param unordered: true /}
    {/call}
  {/if}
{/template}
